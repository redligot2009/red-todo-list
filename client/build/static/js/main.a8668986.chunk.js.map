{"version":3,"sources":["components/ModalDialogBox.js","components/modals/EditItem.js","components/TodoItem.js","components/modals/EditListSettings.js","components/modals/AddItem.js","http-common.js","services/items.service.js","App.js","reportWebVitals.js","index.js"],"names":["ModalDialogBox","props","dialogBoxName","openModal","setState","show","closeModal","resetState","onHide","saveChanges","data","state","modalName","this","prevProps","Modal","Title","Button","variant","onClick","centered","Header","renderHeader","Body","renderBody","Footer","renderFooter","Component","EditItem","Form","Group","id","Label","Control","as","maxLength","defaultValue","itemTitle","placeholder","rows","itemDescription","TodoItem","openEditModal","checked","className","type","defaultChecked","title","description","icon","faEdit","faTrash","EditListSettings","countCharacters","event","charCount","target","value","length","list_description_textarea_length","list_title_input_length","onChange","listSettings","Text","AddItem","axios","create","baseURL","headers","http","get","post","JSON","stringify","App","listItemsContent","listItems","handleCloseModal","bind","handleOpenModal","forEach","item","ItemDataService","then","response","console","log","catch","e","getAll","openModalName","map","listItem","handleShowModal","style","maxWidth","renderListItems","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"wUAgHeA,E,kDA1GX,WAAYC,EAAOC,GAClB,IAAD,8BACI,cAAMD,IAIVE,UAAY,WAER,EAAKC,SAAS,CAACC,MAAK,KAPxB,EAeAC,WAAa,WAET,EAAKC,aACL,EAAKN,MAAMO,UAlBf,EAqBAC,YAAc,SAACC,GAEX,EAAKJ,cArBL,EAAKK,MAAQ,CAACN,KAAgBJ,EAAME,UAAYS,UAAWV,GAF/D,E,yDAYIW,KAAKT,SAAS,CAACC,MAAK,M,yCAcLS,GAClB,IACUT,EAAQQ,KAAKZ,MAAbI,KACJS,EAAUT,OAASA,KAER,IAAPA,EAECQ,KAAKV,YAILU,KAAKP,gB,qCAOb,OACI,cAACS,EAAA,EAAMC,MAAP,kC,mCAQJ,OACI,mCACI,qD,qCASR,OACI,qCACI,cAACC,EAAA,EAAD,CACIC,QAAQ,kBACRC,QAASN,KAAKJ,YAFlB,0BAMA,cAACQ,EAAA,EAAD,CACIC,QAAQ,oBACRC,QAASN,KAAKP,WAFlB,yB,+BAaR,OACI,eAACS,EAAA,EAAD,CACIV,KAAMQ,KAAKF,MAAMN,KACjBG,OAAQK,KAAKP,WACbc,UAAQ,EAHZ,UAKI,cAACL,EAAA,EAAMM,OAAP,UACKR,KAAKS,iBAEV,cAACP,EAAA,EAAMQ,KAAP,UACKV,KAAKW,eAEV,cAACT,EAAA,EAAMU,OAAP,UACKZ,KAAKa,wB,GArGGC,aCARC,E,kDAEjB,WAAY3B,GACX,uCACSA,EAAM,a,2DAKZ,OACI,mCACI,cAACc,EAAA,EAAMC,MAAP,4B,mCASR,OACI,mCACI,eAACa,EAAA,EAAD,WACI,eAACA,EAAA,EAAKC,MAAN,CAAYC,GAAG,YAAf,UACI,cAACF,EAAA,EAAKG,MAAN,yBAGA,cAACH,EAAA,EAAKI,QAAN,CACIF,GAAG,aACHG,GAAG,QACHC,UAAU,KACVC,aAAcvB,KAAKZ,MAAMoC,WAAa,GACtCC,YAAY,8BAIpB,eAACT,EAAA,EAAKC,MAAN,CAAYC,GAAG,kBAAf,UACI,cAACF,EAAA,EAAKG,MAAN,+BAGA,cAACH,EAAA,EAAKI,QAAN,CACIF,GAAG,mBACHG,GAAG,WACHK,KAAK,IACLJ,UAAU,MACVC,aAAcvB,KAAKZ,MAAMuC,iBAAmB,GAC5CF,YAAY,6C,GA9CFtC,GCEjByC,G,wDAEjB,WAAYxC,GACX,IAAD,8BACI,cAAMA,IACDU,MAAM,CACP+B,eAAe,EACfL,UAAU,EAAKpC,MAAMoC,WAAa,GAClCG,gBAAgB,EAAKvC,MAAMuC,iBAAmB,GAC9CG,QAAQ,EAAK1C,MAAM0C,UAAW,GANtC,E,uDAUWN,EAAUG,GAEjB3B,KAAKT,SAAS,CAACsC,eAAc,EAAK9B,UAAU,O,+BAI/C,IAAD,OACI,OACI,qCACI,cAAC,EAAD,CACIP,KAAMQ,KAAKF,MAAM+B,cACjBlC,OAAQ,WAEA,EAAKJ,SAAS,CAACsC,eAAc,EAAM9B,UAAU,eAGrDyB,UAAWxB,KAAKF,MAAM0B,UACtBG,gBAAiB3B,KAAKF,MAAM6B,kBAEhC,sBAAKI,UAAU,gBAAf,UACI,qBAAKA,UAAU,kDAAf,SACI,sBAAKA,UAAU,iCAAf,UACI,uBACIA,UAAU,4CACVC,KAAK,WACLC,eAAgBjC,KAAKF,MAAMgC,UAE/B,uBAAOC,UAAU,uBAAjB,SACI,sBAAMA,UAAU,YAAhB,8BAIZ,sBAAKA,UAAU,yBAAf,UACI,qBAAKA,UAAU,iBAAf,SACK/B,KAAKZ,MAAM8C,OAAS,oBAEzB,qBAAKH,UAAU,mBAAf,SACK/B,KAAKZ,MAAM+C,aAAe,oBAGnC,sBAAKJ,UAAU,mDAAf,UACI,wBACIC,KAAK,SACLD,UAAU,oCACVzB,QAAS,WACL,EAAKf,SAAS,CACVsC,eAAc,EACdL,UAAW,EAAKpC,MAAM8C,MACtBP,gBAAiB,EAAKvC,MAAM+C,eAPxC,SAWI,cAAC,IAAD,CAAiBC,KAAMC,QAE3B,wBAAQL,KAAK,SAASD,UAAU,sCAAhC,SACI,cAAC,IAAD,CAAiBK,KAAME,qB,GApEbxB,c,wBCDjByB,E,kDAEjB,WAAYnD,GACX,IAAD,8BACI,cAAMA,EAAO,uBAGjBoD,gBAAkB,SAACC,GACf,IAAMC,EAAYD,EAAME,OAAOC,MAAMC,OACrC,EAAKtD,SAAL,eAAgBkD,EAAME,OAAOzB,GAAK,UAAYwB,KANlD,E,2DAWI,OACI,mCACI,cAACxC,EAAA,EAAMC,MAAP,qC,mCASR,mEACAH,KAAKT,SAAS,CACVuD,iCAAkC,EAClCC,wBAAyB,M,mCAQ7B,OACI,eAAC/B,EAAA,EAAD,WACI,eAACA,EAAA,EAAKC,MAAN,WACI,cAACD,EAAA,EAAKG,MAAN,yBAGA,cAACH,EAAA,EAAKI,QAAN,CACIF,GAAG,mBACHG,GAAG,QACHC,UAXK,GAYL0B,SAAUhD,KAAKwC,gBACfjB,aAAcvB,KAAKZ,MAAM6D,aAAaf,MACtCT,YAAY,2BAEhB,eAACT,EAAA,EAAKkC,KAAN,eACMlD,KAAKF,MAAMiD,yBAA2B/C,KAAKZ,MAAM6D,aAAaf,MAAMW,OAD1E,MAhBS,GAgBT,UAIJ,eAAC7B,EAAA,EAAKC,MAAN,WACI,cAACD,EAAA,EAAKG,MAAN,+BAGA,cAACH,EAAA,EAAKI,QAAN,CACIF,GAAG,4BACHG,GAAG,WACHK,KAAK,IACLJ,UA3BW,IA4BXC,aAAcvB,KAAKZ,MAAM6D,aAAad,YACtCa,SAAUhD,KAAKwC,gBACff,YAAY,iCAEhB,eAACT,EAAA,EAAKkC,KAAN,eACMlD,KAAKF,MAAMgD,kCAAoC9C,KAAKZ,MAAM6D,aAAad,YAAYU,OADzF,MAhCe,IAgCf,iB,GAnE0B1D,GCDzBgE,E,kDAEjB,WAAY/D,GACX,uCACSA,EAAO,Y,2DAKb,OACI,mCACI,cAACc,EAAA,EAAMC,MAAP,gC,mCASR,OACI,mCACI,eAACa,EAAA,EAAD,CAAME,GAAG,gBAAT,UACI,eAACF,EAAA,EAAKC,MAAN,WACI,cAACD,EAAA,EAAKG,MAAN,yBAGA,cAACH,EAAA,EAAKI,QAAN,CACIF,GAAG,aACHG,GAAG,QACHC,UAAU,KACVG,YAAY,8BAIpB,eAACT,EAAA,EAAKC,MAAN,WACI,cAACD,EAAA,EAAKG,MAAN,+BAGA,cAACH,EAAA,EAAKI,QAAN,CACIF,GAAG,mBACHG,GAAG,WACHK,KAAK,IACLJ,UAAU,MACVG,YAAY,6C,GA5CHtC,G,QCFtBiE,E,OAAAA,EAAMC,OAAO,CACxBC,QAAS,iCACTC,QAAS,CACL,eAAgB,sBCeT,M,iGAdP,OAAOC,EAAKC,IAAI,Y,6BAQb5D,GAEH,OAAO2D,EAAKE,KAAK,aAAcC,KAAKC,UAAU/D,Q,MCCjCgE,E,kDAEnB,WAAYzE,GACX,IAAD,8BACE,cAAMA,IAcR0E,iBAAmB,CACjB,CACEtC,UAAW,kBACXG,gBAAiB,SACjBG,SAAS,GAEX,CACEN,UAAW,uBACXG,gBAAiB,eACjBG,SAAS,GAEX,CACEN,UAAW,sBACXG,gBAAiB,oBACjBG,SAAS,IA3BX,EAAKhC,MAAQ,CACXR,WAAW,EACXS,UAAW,GACXgE,UAAW,GACXd,aAAc,CACZf,MAAO,UACPC,YAAa,2JAGjB,EAAK6B,iBAAmB,EAAKA,iBAAiBC,KAAtB,gBACxB,EAAKC,gBAAkB,EAAKA,gBAAgBD,KAArB,gBAZzB,E,2DAoCEjE,KAAK8D,iBAAiBK,SACpB,SAACC,GAEC,IAAIvE,EAAO,CACT2B,UAAW4C,EAAK5C,UAChBG,gBAAiByC,EAAKzC,gBACtBG,QAASsC,EAAKtC,SAEhBuC,EAAgBhB,OAAOxD,GACpByE,MAAM,SAAAC,GACLC,QAAQC,IAAIF,EAAS1E,SAEtB6E,OAAO,SAAAC,GACNH,QAAQC,IAAIE,W,0CAMrB,IAAD,OAKEN,EAAgBO,SACbN,MAAK,SAAAC,GACJ,EAAKhF,SAAS,CACZwE,UAAWQ,EAAS1E,OAEtB,EAAKC,MAAMiE,UAAYQ,EAAS1E,KAChC2E,QAAQC,IAAIF,EAAS1E,MACrB2E,QAAQC,IAAI,EAAK3E,MAAMiE,cAExBW,OAAM,SAAAC,GACLH,QAAQC,IAAIE,Q,yCAQhB3E,KAAKT,UAAS,SAAAO,GAAK,MAAK,CACtBR,WAAU,EACVS,UAAU,S,sCAIG8E,GAEf7E,KAAKT,UAAS,SAAAO,GAAK,MAAK,CACtBR,WAAU,EACVS,UAAW8E,Q,sCAIC9E,GAEd,OAAQC,KAAKF,MAAMC,YAAYA,EAAYC,KAAKF,MAAMR,UAAY,I,wCAoBlE,OAZE,mCACGU,KAAKF,MAAMiE,UAAUe,KAClB,SAAAC,GAAQ,OACN,cAAC,EAAD,CAEE7C,MAAO6C,EAASvD,UAChBW,YAAa4C,EAASpD,gBACtBG,QAASiD,EAASjD,SAHbiD,EAAS7D,W,+BAY3B,IAAD,OACE,OACE,sBAAKa,UAAU,oFAAf,UACE,cAAC,EAAD,CACEkB,aAAcjD,KAAKF,MAAMmD,aACzBzD,KAAMQ,KAAKgF,gBAAgB,sBAC3BrF,OAAQK,KAAKgE,mBAEf,cAAC,EAAD,CACExE,KAAMQ,KAAKgF,gBAAgB,YAC3BrF,OAAQK,KAAKgE,mBAEf,qBAAKjC,UAAU,8EAAf,SACE,sBAAKA,UAAU,kBAAkBkD,MAAO,CAACC,SAAS,KAAlD,UACE,mCAAMlF,KAAKF,MAAMmD,aAAaf,MAA9B,OACA,kCAAKlC,KAAKF,MAAMmD,aAAad,YAA7B,YAGJ,qBAAKJ,UAAU,yBAAf,SACE,qBAAKA,UAAU,6DAA6DkD,MAAO,CAACC,SAAS,KAA7F,SACIlF,KAAKmF,sBAGX,sBAAKpD,UAAU,6CAAf,UACI,cAAC3B,EAAA,EAAD,CACEC,QAAQ,kBACRC,QAAS,kBAAI,EAAK4D,gBAAgB,aAFpC,0BAMA,cAAC9D,EAAA,EAAD,CACEC,QAAQ,kBACRC,QAAS,kBAAM,EAAK4D,gBAAgB,uBAFtC,qC,GAvJqBpD,aCLlBsE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,QCGdO,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.a8668986.chunk.js","sourcesContent":["\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport React, { Component } from \"react\";\r\n\r\nclass ModalDialogBox extends Component \r\n{\r\n    constructor(props, dialogBoxName)\r\n    {\r\n        super(props);\r\n        this.state = {show: (false || props.openModal), modalName: dialogBoxName};\r\n    }\r\n\r\n    openModal = () =>\r\n    {\r\n        this.setState({show:true});\r\n    }\r\n\r\n    resetState()\r\n    {\r\n        this.setState({show:false});\r\n    }\r\n    \r\n    closeModal = () =>\r\n    {\r\n        this.resetState();\r\n        this.props.onHide();\r\n    }\r\n\r\n    saveChanges = (data) =>\r\n    {\r\n        this.closeModal();\r\n    }\r\n\r\n    componentDidUpdate(prevProps)\r\n    {\r\n        const {show} = this.props;\r\n        if(prevProps.show !== show)\r\n        {\r\n            if(show===true)\r\n            {\r\n                this.openModal();\r\n            }\r\n            else\r\n            {\r\n                this.closeModal();\r\n            }\r\n        }\r\n    }\r\n\r\n    renderHeader()\r\n    {\r\n        return (\r\n            <Modal.Title>\r\n                Insert Title Here\r\n            </Modal.Title>\r\n        );\r\n    }\r\n\r\n    renderBody()\r\n    {\r\n        return (\r\n            <>\r\n                <div>\r\n                    Test Body Here\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderFooter()\r\n    {\r\n        return (\r\n            <>\r\n                <Button \r\n                    variant=\"outline-primary\"\r\n                    onClick={this.saveChanges}\r\n                >\r\n                    Save Changes\r\n                </Button>\r\n                <Button \r\n                    variant=\"outline-secondary\" \r\n                    onClick={this.closeModal}\r\n                >\r\n                    Cancel\r\n                </Button>\r\n            </>\r\n        );\r\n        \r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <Modal\r\n                show={this.state.show}\r\n                onHide={this.closeModal} \r\n                centered\r\n            >\r\n                <Modal.Header>\r\n                    {this.renderHeader()}\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {this.renderBody()}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    {this.renderFooter()}\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ModalDialogBox;","import { Modal, Button, Form } from \"react-bootstrap\";\r\nimport React, { Component } from \"react\";\r\nimport ModalDialogBox from '../ModalDialogBox';\r\n\r\nexport default class EditItem extends ModalDialogBox\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props,\"edit-item\");\r\n    }\r\n    \r\n    renderHeader()\r\n    {\r\n        return (\r\n            <>\r\n                <Modal.Title>\r\n                    Edit Item\r\n                </Modal.Title>\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderBody()\r\n    {\r\n        return (\r\n            <>\r\n                <Form>\r\n                    <Form.Group id=\"listTitle\">\r\n                        <Form.Label>\r\n                            Item Title\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                            id=\"item-title\"\r\n                            as=\"input\"\r\n                            maxLength=\"50\"\r\n                            defaultValue={this.props.itemTitle || ''}\r\n                            placeholder=\"Enter item title here.\"\r\n                        />\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group id=\"listDescription\">\r\n                        <Form.Label>\r\n                            Item Description\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                            id=\"item-description\"\r\n                            as=\"textarea\"\r\n                            rows=\"3\"\r\n                            maxLength=\"150\"\r\n                            defaultValue={this.props.itemDescription || ''}\r\n                            placeholder=\"Enter item description here.\"\r\n                        />\r\n                    </Form.Group>\r\n                    \r\n                </Form>\r\n            </>\r\n        )\r\n    }\r\n}","import { faEdit, faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, {Component} from 'react';\r\nimport EditItem from './modals/EditItem';\r\nimport './TodoItem.scss';\r\n\r\nexport default class TodoItem extends Component \r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state={\r\n            openEditModal: false,\r\n            itemTitle:this.props.itemTitle || '',\r\n            itemDescription:this.props.itemDescription || '',\r\n            checked:this.props.checked || false\r\n        };\r\n    }\r\n\r\n    handleEdit(itemTitle,itemDescription)\r\n    {\r\n        this.setState({openEditModal:true,modalName:''})\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <>\r\n                <EditItem \r\n                    show={this.state.openEditModal}\r\n                    onHide={() =>\r\n                        {\r\n                            this.setState({openEditModal:false,modalName:'edit-item'});\r\n                        }\r\n                    }\r\n                    itemTitle={this.state.itemTitle}\r\n                    itemDescription={this.state.itemDescription}\r\n                />\r\n                <div className=\"row todo-item\">\r\n                    <div className=\"col-2 d-flex justify-content-center item-status\">\r\n                        <div className=\"custom-control custom-checkbox\">\r\n                            <input \r\n                                className=\"item-status-checkbox custom-control-input\" \r\n                                type=\"checkbox\" \r\n                                defaultChecked={this.state.checked} \r\n                            />\r\n                            <label className=\"custom-control-label\">\r\n                                <span className=\"text-hide\">Invisible</span>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-6 item-information\">\r\n                        <div className=\"row item-title\">\r\n                            {this.props.title || \"Test Title Here\"}\r\n                        </div>\r\n                        <div className=\"row item-details\">\r\n                            {this.props.description || \"Message here\"}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-4 item-operations d-flex justify-content-end\">\r\n                        <button \r\n                            type=\"button\" \r\n                            className=\"item-edit btn btn-outline-primary\"\r\n                            onClick={()=>{\r\n                                this.setState({\r\n                                    openEditModal:true,\r\n                                    itemTitle: this.props.title,\r\n                                    itemDescription: this.props.description\r\n                                })\r\n                            }}\r\n                        >\r\n                            <FontAwesomeIcon icon={faEdit} />\r\n                        </button>\r\n                        <button type=\"button\" className=\"item-delete btn btn-outline-primary\">\r\n                            <FontAwesomeIcon icon={faTrash} />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}","\r\nimport { Modal, Button, Form } from \"react-bootstrap\";\r\nimport React, { Component } from \"react\";\r\nimport ModalDialogBox from '../ModalDialogBox';\r\n\r\nexport default class EditListSettings extends ModalDialogBox \r\n{\r\n    constructor(props)\r\n    {\r\n        super(props, \"edit-list-settings\");\r\n    }\r\n\r\n    countCharacters = (event) => {\r\n        const charCount = event.target.value.length;\r\n        this.setState({[event.target.id + '_length']: charCount})\r\n    }\r\n\r\n    renderHeader()\r\n    {\r\n        return (\r\n            <>\r\n                <Modal.Title>\r\n                    Edit List Settings\r\n                </Modal.Title>\r\n            </>\r\n        );\r\n    }\r\n\r\n    resetState()\r\n    {\r\n        super.resetState();\r\n        this.setState({\r\n            list_description_textarea_length: 0,\r\n            list_title_input_length: 0\r\n        });\r\n    }\r\n\r\n    renderBody()\r\n    {\r\n        let maxTitleLength = 50;\r\n        let maxDescriptionLength = 150;\r\n        return (\r\n            <Form>\r\n                <Form.Group>\r\n                    <Form.Label> \r\n                        List Title\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                        id=\"list_title_input\"\r\n                        as=\"input\" \r\n                        maxLength={maxTitleLength}\r\n                        onChange={this.countCharacters}\r\n                        defaultValue={this.props.listSettings.title}\r\n                        placeholder=\"Enter list title here.\"\r\n                    />\r\n                    <Form.Text>\r\n                        ({this.state.list_title_input_length || this.props.listSettings.title.length} / {maxTitleLength})\r\n                    </Form.Text>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label> \r\n                        List Description\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                        id=\"list_description_textarea\"\r\n                        as=\"textarea\"\r\n                        rows=\"3\"\r\n                        maxLength={maxDescriptionLength}\r\n                        defaultValue={this.props.listSettings.description}\r\n                        onChange={this.countCharacters}\r\n                        placeholder=\"Enter list description here.\"\r\n                    />\r\n                    <Form.Text>\r\n                        ({this.state.list_description_textarea_length || this.props.listSettings.description.length} / {maxDescriptionLength})\r\n                    </Form.Text>\r\n                </Form.Group>\r\n            </Form>\r\n        );\r\n    }\r\n}","import { Modal, Button, Form } from \"react-bootstrap\";\r\nimport React, { Component } from \"react\";\r\nimport ModalDialogBox from '../ModalDialogBox';\r\n\r\nexport default class AddItem extends ModalDialogBox\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props, \"add-item\");\r\n    }\r\n    \r\n    renderHeader()\r\n    {\r\n        return (\r\n            <>\r\n                <Modal.Title>\r\n                    Add List Item\r\n                </Modal.Title>\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderBody()\r\n    {\r\n        return (\r\n            <>\r\n                <Form id=\"add-item-form\">\r\n                    <Form.Group >\r\n                        <Form.Label>\r\n                            Item Title\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                            id=\"item-title\"\r\n                            as=\"input\"\r\n                            maxLength=\"50\"\r\n                            placeholder=\"Enter item title here.\"\r\n                        />\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group >\r\n                        <Form.Label>\r\n                            Item Description\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                            id=\"item-description\"\r\n                            as=\"textarea\"\r\n                            rows=\"3\"\r\n                            maxLength=\"150\"\r\n                            placeholder=\"Enter item description here.\"\r\n                        />\r\n                    </Form.Group>\r\n                </Form>\r\n            </>\r\n        );\r\n    }\r\n}","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: \"http://192.168.86.165:3000/api\",\r\n    headers: {\r\n        \"Content-type\": \"application/json\"\r\n    }\r\n});","import http from '../http-common';\r\n\r\nclass ItemDataService\r\n{\r\n    getAll()\r\n    {\r\n        return http.get(\"/items\");\r\n    }\r\n\r\n    // get(id)\r\n    // {\r\n    //     return http.get(`/items/${id}`);\r\n    // }\r\n\r\n    create(data)\r\n    {\r\n        return http.post(\"/items/add\", JSON.stringify(data));\r\n    }\r\n}\r\n\r\nexport default new ItemDataService();","// STYLES\nimport './App.scss';\n\n// LIBRARY IMPORTS\nimport {Button} from 'react-bootstrap';\nimport { Component } from 'react';\n\n// REGULAR COMPONENTS\nimport TodoItem from './components/TodoItem';\n\n//MODAL COMPONENTS\nimport EditListSettings from './components/modals/EditListSettings';\nimport AddItem from './components/modals/AddItem';\n\n// SERVICES\nimport ItemDataService from './services/items.service';\n\nexport default class App extends Component\n{\n  constructor(props)\n  {\n    super(props);\n    this.state = {\n      openModal: false, \n      modalName: \"\",\n      listItems: [],\n      listSettings: {\n        title: 'My List',\n        description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed sollicitudin eget tortor vel aliquam. Curabitur velit lectus, sodales in massa tempor, co'\n      }\n    };\n    this.handleCloseModal = this.handleCloseModal.bind(this);\n    this.handleOpenModal = this.handleOpenModal.bind(this);\n  }\n\n  listItemsContent = [\n    {\n      itemTitle: \"This is a Title\",\n      itemDescription: \"Hello!\",\n      checked: false\n    },\n    {\n      itemTitle: \"This is also a Title\",\n      itemDescription: \"How Are You?\",\n      checked: false\n    },\n    {\n      itemTitle: \"This is not a Title\",\n      itemDescription: \"How Well Are You?\",\n      checked: true\n    }\n  ];\n\n  //TEST FUNCTION\n  populateList()\n  {\n    this.listItemsContent.forEach(\n      (item) =>\n      {\n        var data = {\n          itemTitle: item.itemTitle,\n          itemDescription: item.itemDescription,\n          checked: item.checked\n        };\n        ItemDataService.create(data)\n          .then (response=>{\n            console.log(response.data);\n          })\n          .catch (e=>{\n            console.log(e);\n          });\n      });\n  }\n\n  componentDidMount()\n  {\n    // TEST CODE\n    //this.populateList();\n\n    // Get all items in list from database through backend REST api\n    ItemDataService.getAll()\n      .then(response=>{\n        this.setState({\n          listItems: response.data\n        });\n        this.state.listItems = response.data;\n        console.log(response.data);\n        console.log(this.state.listItems);\n      })\n      .catch(e=>{\n        console.log(e);\n      })\n  }\n\n  //HANDLE MODAL EVENTS\n  \n  handleCloseModal()\n  {\n    this.setState(state => ({\n      openModal:false,\n      modalName:''\n    }));\n  }\n\n  handleOpenModal (openModalName)\n  {\n    this.setState(state => ({\n      openModal:true,\n      modalName: openModalName\n    }));\n  }\n\n  handleShowModal(modalName)\n  {\n    return (this.state.modalName===modalName ? this.state.openModal : 0);\n  }\n\n  // RENDER LIST ITEMS\n\n  renderListItems()\n  {\n    const item = (\n      <>\n        {this.state.listItems.map(\n            listItem => (\n              <TodoItem \n                key={listItem.id}\n                title={listItem.itemTitle}\n                description={listItem.itemDescription}\n                checked={listItem.checked}\n              />\n        ))}\n      </>\n    );\n    return item;\n  }\n\n  render()\n  {\n    return (\n      <div className=\"container-fluid d-flex flex-column justify-content-center h-100 overflow-auto App\">\n        <EditListSettings \n          listSettings={this.state.listSettings}\n          show={this.handleShowModal(\"edit-list-settings\")} \n          onHide={this.handleCloseModal}\n        />\n        <AddItem\n          show={this.handleShowModal(\"add-item\")}\n          onHide={this.handleCloseModal}\n        />\n        <div className=\"row d-flex flex-column align-items-center justify-content-center list-title\">\n          <div className=\"container-fluid\" style={{maxWidth:750}}>\n            <h1> {this.state.listSettings.title} </h1>\n            <p> {this.state.listSettings.description} </p>\n          </div>\n        </div>\n        <div className=\"row list-contents h-50\">\n          <div className=\"container-fluid justify-content-center h-100 overflow-auto\" style={{maxWidth:750}}>\n            { this.renderListItems() }\n          </div>\n        </div>\n        <div className=\"row justify-content-center list-operations\">\n            <Button \n              variant=\"outline-primary\"\n              onClick={()=>this.handleOpenModal(\"add-item\")}\n            >\n              Add New Item\n            </Button>\n            <Button \n              variant=\"outline-primary\"\n              onClick={() => this.handleOpenModal(\"edit-list-settings\")}\n            >\n              List Settings\n            </Button>\n        </div>\n      </div>\n    );\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.js';\nimport 'react-bootstrap';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}