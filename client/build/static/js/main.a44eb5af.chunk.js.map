{"version":3,"sources":["components/ModalDialogBox.js","http-common.js","services/items.service.js","components/modals/EditItem.js","components/TodoItem.js","components/modals/EditListSettings.js","components/modals/AddItem.js","App.js","reportWebVitals.js","index.js"],"names":["ModalDialogBox","props","dialogBoxName","state","show","openModal","modalName","closeModal","bind","saveChanges","this","setState","resetState","onHide","prevProps","Modal","Title","Button","variant","onClick","centered","Header","renderHeader","Body","renderBody","Footer","renderFooter","Component","axios","create","baseURL","headers","data","http","post","JSON","stringify","get","id","put","delete","EditItem","itemTitle","itemDescription","ItemDataService","update","then","res","console","log","catch","e","onEdit","Form","Group","Label","Control","as","maxLength","value","defaultValue","placeholder","onChange","target","rows","TodoItem","openEditModal","checked","className","type","defaultChecked","icon","faEdit","onDelete","faTrash","EditListSettings","countCharacters","event","charCount","length","list_description_textarea_length","list_title_input_length","listSettings","title","Text","description","AddItem","App","listItemsContent","handleDeleteItem","itemId","items","listItems","filter","item","handleCloseModal","handleOpenModal","retrieveList","forEach","response","getAll","openModalName","map","listItem","handleShowModal","style","maxWidth","renderListItems","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a44eb5af.chunk.js","sourcesContent":["\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport React, { Component } from \"react\";\r\n\r\nclass ModalDialogBox extends Component \r\n{\r\n    constructor(props, dialogBoxName)\r\n    {\r\n        super(props);\r\n        this.state = {show: (false || props.openModal), modalName: dialogBoxName};\r\n        // Bind modal methods\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.openModal = this.openModal.bind(this);\r\n        this.saveChanges = this.saveChanges.bind(this);\r\n    }\r\n\r\n    openModal ()\r\n    {\r\n        this.setState({show:true});\r\n    }\r\n\r\n    resetState()\r\n    {\r\n        this.setState({show:false});\r\n    }\r\n    \r\n    closeModal ()\r\n    {\r\n        this.resetState();\r\n        this.props.onHide();\r\n    }\r\n\r\n    saveChanges ()\r\n    {\r\n        this.closeModal();\r\n    }\r\n\r\n    componentDidUpdate(prevProps)\r\n    {\r\n        const {show} = this.props;\r\n        if(prevProps.show !== show)\r\n        {\r\n            if(show===true)\r\n            {\r\n                this.openModal();\r\n            }\r\n            else\r\n            {\r\n                this.closeModal();\r\n            }\r\n        }\r\n    }\r\n\r\n    renderHeader()\r\n    {\r\n        return (\r\n            <Modal.Title>\r\n                Insert Title Here\r\n            </Modal.Title>\r\n        );\r\n    }\r\n\r\n    renderBody()\r\n    {\r\n        return (\r\n            <>\r\n                <div>\r\n                    Test Body Here\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderFooter()\r\n    {\r\n        return (\r\n            <>\r\n                <Button \r\n                    variant=\"outline-primary\"\r\n                    onClick={this.saveChanges}\r\n                >\r\n                    Save Changes\r\n                </Button>\r\n                <Button \r\n                    variant=\"outline-secondary\" \r\n                    onClick={this.closeModal}\r\n                >\r\n                    Cancel\r\n                </Button>\r\n            </>\r\n        );\r\n        \r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <Modal\r\n                show={this.state.show}\r\n                onHide={this.closeModal} \r\n                centered\r\n            >\r\n                <Modal.Header>\r\n                    {this.renderHeader()}\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {this.renderBody()}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    {this.renderFooter()}\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ModalDialogBox;","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: \"http://192.168.86.165:3000/api\",\r\n    headers: {\r\n        \"Content-type\": \"application/json\"\r\n    }\r\n});","import http from '../http-common';\r\n\r\nclass ItemDataService\r\n{\r\n    create(data)\r\n    {\r\n        return http.post(\"/items/add\", JSON.stringify(data));\r\n    }\r\n\r\n    getAll()\r\n    {\r\n        return http.get(\"/items\");\r\n    }\r\n\r\n    update(id, data)\r\n    {\r\n        return http.put(`/items/${id}`, JSON.stringify(data));\r\n    }\r\n\r\n    delete(id)\r\n    {\r\n        return http.delete(`/items/${id}`);\r\n    }\r\n\r\n}\r\n\r\nexport default new ItemDataService();","import { Modal, Button, Form } from \"react-bootstrap\";\r\nimport React, { Component } from \"react\";\r\nimport ModalDialogBox from '../ModalDialogBox';\r\n\r\n// Import \r\n\r\nimport ItemDataService from '../../services/items.service';\r\nimport axios from \"axios\";\r\n\r\nexport default class EditItem extends ModalDialogBox\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props,\"edit-item\");\r\n        this.state = {\r\n            id: this.props.id,\r\n            itemTitle: this.props.itemTitle,\r\n            itemDescription: this.props.itemDescription\r\n        };\r\n    }\r\n    \r\n    async saveChanges ()\r\n    {\r\n        super.saveChanges();\r\n        let data ={\r\n            itemTitle: this.state.itemTitle,\r\n            itemDescription: this.state.itemDescription\r\n        };\r\n        // Update item fields\r\n        await ItemDataService.update(this.state.id, data)\r\n            .then(res=>{\r\n                console.log(\"Item updated successfully! \" + res.data);\r\n            })\r\n            .catch(e=>{\r\n                console.log(e);\r\n            });\r\n        this.props.onEdit();\r\n    }\r\n\r\n    // RENDER COMPONENT\r\n    renderHeader()\r\n    {\r\n        return (\r\n            <>\r\n                <Modal.Title>\r\n                    Edit Item\r\n                </Modal.Title>\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderBody()\r\n    {\r\n        return (\r\n            <>\r\n                <Form>\r\n                    <Form.Group id=\"listTitle\">\r\n                        <Form.Label>\r\n                            Item Title\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                            id=\"item-title\"\r\n                            as=\"input\"\r\n                            maxLength=\"50\"\r\n                            value={this.state.itemTitle}\r\n                            defaultValue={this.props.itemTitle}\r\n                            placeholder=\"Enter item title here.\"\r\n                            onChange={e => this.setState({ itemTitle: e.target.value })}\r\n                        />\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group id=\"listDescription\">\r\n                        <Form.Label>\r\n                            Item Description\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                            id=\"item-description\"\r\n                            as=\"textarea\"\r\n                            rows=\"3\"\r\n                            maxLength=\"150\"\r\n                            value={this.state.itemDescription}\r\n                            defaultValue={this.props.itemDescription}\r\n                            placeholder=\"Enter item description here.\"\r\n                            onChange={e => this.setState({ itemDescription: e.target.value })}\r\n                        />\r\n                    </Form.Group>\r\n                    \r\n                </Form>\r\n            </>\r\n        )\r\n    }\r\n}","import { faEdit, faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, {Component} from 'react';\r\n\r\n// Import React components\r\nimport EditItem from './modals/EditItem';\r\nimport './TodoItem.scss';\r\n\r\n// Import Axios services\r\n\r\nimport ItemDataService from '../services/items.service';\r\n\r\nexport default class TodoItem extends Component \r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            id: this.props.id || 0,\r\n            openEditModal: false,\r\n            itemTitle: this.props.itemTitle || '',\r\n            itemDescription: this.props.itemDescription || '',\r\n            checked: this.props.checked || false\r\n        };\r\n    }\r\n\r\n    // Event Handlers\r\n    handleEdit(itemTitle,itemDescription)\r\n    {\r\n        this.setState({openEditModal:true, modalName:''})\r\n    }\r\n\r\n    handleDelete()\r\n    {\r\n        //alert(\"Deleting an item\");\r\n    }\r\n\r\n    // Render Component\r\n    render()\r\n    {\r\n        return (\r\n            <>\r\n                <EditItem \r\n                    show={this.state.openEditModal}\r\n                    id={this.state.id}\r\n                    itemTitle={this.state.itemTitle}\r\n                    itemDescription={this.state.itemDescription}\r\n                    onHide={() => {\r\n                        this.setState({\r\n                            openEditModal:false,\r\n                            modalName:'edit-item'\r\n                        });\r\n                    }}\r\n                    onEdit={this.props.onEdit}\r\n                />\r\n                <div className=\"row todo-item\">\r\n                    <div className=\"col-2 d-flex justify-content-center item-status\">\r\n                        <div className=\"custom-control custom-checkbox\">\r\n                            <input \r\n                                className=\"item-status-checkbox custom-control-input\" \r\n                                type=\"checkbox\" \r\n                                defaultChecked={this.state.checked} \r\n                            />\r\n                            <label className=\"custom-control-label\">\r\n                                <span className=\"text-hide\"> Invisible </span>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-6 item-information\">\r\n                        <div className=\"row item-title\">\r\n                            {this.props.itemTitle || \"Test Title Here\"}\r\n                        </div>\r\n                        <div className=\"row item-details\">\r\n                            {this.props.itemDescription || \"Message here\"}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-4 item-operations d-flex justify-content-end\">\r\n                        <button \r\n                            type=\"button\" \r\n                            className=\"item-edit btn btn-outline-primary\"\r\n                            onClick={() => {\r\n                                this.setState({\r\n                                    openEditModal:true,\r\n                                    itemTitle: this.props.itemTitle,\r\n                                    itemDescription: this.props.itemDescription\r\n                                })\r\n                            }}\r\n                        >\r\n                            <FontAwesomeIcon icon={faEdit} />\r\n                        </button>\r\n                        <button \r\n                            type=\"button\" \r\n                            className=\"item-delete btn btn-outline-primary\"\r\n                            onClick={()=>this.props.onDelete(this.props.id)}\r\n                        >\r\n                            <FontAwesomeIcon icon={faTrash} />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}","\r\nimport { Modal, Button, Form } from \"react-bootstrap\";\r\nimport React, { Component } from \"react\";\r\nimport ModalDialogBox from '../ModalDialogBox';\r\n\r\nexport default class EditListSettings extends ModalDialogBox \r\n{\r\n    constructor(props)\r\n    {\r\n        super(props, \"edit-list-settings\");\r\n    }\r\n\r\n    countCharacters = (event) => {\r\n        const charCount = event.target.value.length;\r\n        this.setState({[event.target.id + '_length']: charCount})\r\n    }\r\n\r\n    renderHeader()\r\n    {\r\n        return (\r\n            <>\r\n                <Modal.Title>\r\n                    Edit List Settings\r\n                </Modal.Title>\r\n            </>\r\n        );\r\n    }\r\n\r\n    resetState()\r\n    {\r\n        super.resetState();\r\n        this.setState({\r\n            list_description_textarea_length: 0,\r\n            list_title_input_length: 0\r\n        });\r\n    }\r\n\r\n    renderBody()\r\n    {\r\n        let maxTitleLength = 50;\r\n        let maxDescriptionLength = 150;\r\n        return (\r\n            <Form>\r\n                <Form.Group>\r\n                    <Form.Label> \r\n                        List Title\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                        id=\"list_title_input\"\r\n                        as=\"input\" \r\n                        maxLength={maxTitleLength}\r\n                        onChange={this.countCharacters}\r\n                        defaultValue={this.props.listSettings.title}\r\n                        placeholder=\"Enter list title here.\"\r\n                    />\r\n                    <Form.Text>\r\n                        ({this.state.list_title_input_length || this.props.listSettings.title.length} / {maxTitleLength})\r\n                    </Form.Text>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label> \r\n                        List Description\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                        id=\"list_description_textarea\"\r\n                        as=\"textarea\"\r\n                        rows=\"3\"\r\n                        maxLength={maxDescriptionLength}\r\n                        defaultValue={this.props.listSettings.description}\r\n                        onChange={this.countCharacters}\r\n                        placeholder=\"Enter list description here.\"\r\n                    />\r\n                    <Form.Text>\r\n                        ({this.state.list_description_textarea_length || this.props.listSettings.description.length} / {maxDescriptionLength})\r\n                    </Form.Text>\r\n                </Form.Group>\r\n            </Form>\r\n        );\r\n    }\r\n}","import { Modal, Button, Form } from \"react-bootstrap\";\r\nimport React, { Component } from \"react\";\r\nimport ModalDialogBox from '../ModalDialogBox';\r\n\r\nexport default class AddItem extends ModalDialogBox\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props, \"add-item\");\r\n    }\r\n    \r\n    renderHeader()\r\n    {\r\n        return (\r\n            <>\r\n                <Modal.Title>\r\n                    Add List Item\r\n                </Modal.Title>\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderBody()\r\n    {\r\n        return (\r\n            <>\r\n                <Form id=\"add-item-form\">\r\n                    <Form.Group >\r\n                        <Form.Label>\r\n                            Item Title\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                            id=\"item-title\"\r\n                            as=\"input\"\r\n                            maxLength=\"50\"\r\n                            placeholder=\"Enter item title here.\"\r\n                        />\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group >\r\n                        <Form.Label>\r\n                            Item Description\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                            id=\"item-description\"\r\n                            as=\"textarea\"\r\n                            rows=\"3\"\r\n                            maxLength=\"150\"\r\n                            placeholder=\"Enter item description here.\"\r\n                        />\r\n                    </Form.Group>\r\n                </Form>\r\n            </>\r\n        );\r\n    }\r\n}","// STYLES\nimport './App.scss';\n\n// LIBRARY IMPORTS\nimport {Button} from 'react-bootstrap';\nimport { Component } from 'react';\n\n// REGULAR COMPONENTS\nimport TodoItem from './components/TodoItem';\n\n//MODAL COMPONENTS\nimport EditListSettings from './components/modals/EditListSettings';\nimport AddItem from './components/modals/AddItem';\n\n// SERVICES\nimport ItemDataService from './services/items.service';\n\nexport default class App extends Component\n{\n\n  // TEST FUNCTION\n  listItemsContent = [\n    {\n      itemTitle: \"This is a Title\",\n      itemDescription: \"Hello!\",\n      checked: false\n    },\n    {\n      itemTitle: \"This is also a Title\",\n      itemDescription: \"How Are You?\",\n      checked: false\n    },\n    {\n      itemTitle: \"This is not a Title\",\n      itemDescription: \"How Well Are You?\",\n      checked: true\n    }\n  ];\n\n  populateList()\n  {\n    this.listItemsContent.forEach(\n      (item) =>\n      {\n        var data = {\n          itemTitle: item.itemTitle,\n          itemDescription: item.itemDescription,\n          checked: item.checked\n        };\n        ItemDataService.create(data)\n          .then (response=>{\n            console.log(response.data);\n          })\n          .catch (e=>{\n            console.log(e);\n          });\n      });\n  }\n\n  // Constructor + Component methods\n  constructor(props)\n  {\n    super(props);\n    this.state = {\n      openModal: false, \n      modalName: \"\",\n      listItems: [],\n      listSettings: {\n        title: 'My List',\n        description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed sollicitudin eget tortor vel aliquam. Curabitur velit lectus, sodales in massa tempor, co'\n      }\n    };\n    this.handleCloseModal = this.handleCloseModal.bind(this);\n    this.handleOpenModal = this.handleOpenModal.bind(this);\n    this.retrieveList = this.retrieveList.bind(this);\n  }\n\n  componentDidMount()\n  {\n    // TEST CODE\n    //this.populateList();\n\n    // Get all items in list from database through backend REST api\n    this.retrieveList();\n  }\n\n  // DATABASE EVENTS\n  retrieveList ()\n  {\n    console.log(\"Refreshed list items.\");\n    ItemDataService.getAll()\n      .then(response=>{\n        this.setState({\n          listItems: response.data\n        });\n        this.state.listItems = response.data;\n      })\n      .catch(e=>{\n        console.log(e);\n      });\n  }\n\n  // HANDLE MODAL EVENTS\n  handleCloseModal()\n  {\n    this.setState(state => ({\n      openModal:false,\n      modalName:''\n    }));\n  }\n\n  handleOpenModal (openModalName)\n  {\n    this.setState(state => ({\n      openModal:true,\n      modalName: openModalName\n    }));\n  }\n\n  handleShowModal(modalName)\n  {\n    return (this.state.modalName===modalName ? this.state.openModal : 0);\n  }\n\n  // HANDLE LIST ITEM EVENTS\n  handleDeleteItem = (itemId) =>\n  {\n    console.log(itemId);\n    // Delete item on the UI\n    const items = this.state.listItems.filter(item => item.id !== itemId);\n    this.setState({listItems: items});\n    // Delete item from database\n    ItemDataService.delete(itemId)\n      .catch((e)=>\n      {\n        console.log(e);\n      });\n  }\n\n  // RENDER LIST ITEMS\n  renderListItems()\n  {\n    const item = (\n      <>\n        {this.state.listItems.map(\n            listItem => (\n              <TodoItem \n                key={listItem.id}\n                id={listItem.id}\n                itemTitle={listItem.itemTitle}\n                itemDescription={listItem.itemDescription}\n                checked={listItem.checked}\n                onDelete={this.handleDeleteItem}\n                onEdit={this.retrieveList}\n              />\n        ))}\n      </>\n    );\n    return item;\n  }\n\n  // RENDER APP\n  render()\n  {\n    return (\n      <div className=\"container-fluid d-flex flex-column justify-content-center h-100 overflow-auto App\">\n        <EditListSettings \n          listSettings={this.state.listSettings}\n          show={this.handleShowModal(\"edit-list-settings\")} \n          onHide={this.handleCloseModal}\n        />\n        <AddItem\n          show={this.handleShowModal(\"add-item\")}\n          onHide={this.handleCloseModal}\n        />\n        <div className=\"row d-flex flex-column align-items-center justify-content-center list-title\">\n          <div className=\"container-fluid\" style={{maxWidth:750}}>\n            <h1> {this.state.listSettings.title} </h1>\n            <p> {this.state.listSettings.description} </p>\n          </div>\n        </div>\n        <div className=\"row list-contents h-50\">\n          <div className=\"container-fluid justify-content-center h-100 overflow-auto\" style={{maxWidth:750}}>\n            { this.renderListItems() }\n          </div>\n        </div>\n        <div className=\"row justify-content-center list-operations\">\n            <Button \n              variant=\"outline-primary\"\n              onClick={()=>this.handleOpenModal(\"add-item\")}\n            >\n              Add New Item\n            </Button>\n            <Button \n              variant=\"outline-primary\"\n              onClick={() => this.handleOpenModal(\"edit-list-settings\")}\n            >\n              List Settings\n            </Button>\n        </div>\n      </div>\n    );\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.js';\nimport 'react-bootstrap';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}