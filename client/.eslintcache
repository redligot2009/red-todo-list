[{"C:\\Users\\RED\\Documents\\GitHub\\red-todo-list\\client\\src\\index.js":"1","C:\\Users\\RED\\Documents\\GitHub\\red-todo-list\\client\\src\\App.js":"2","C:\\Users\\RED\\Documents\\GitHub\\red-todo-list\\client\\src\\reportWebVitals.js":"3","C:\\Users\\RED\\Documents\\GitHub\\red-todo-list\\client\\src\\components\\TodoItem.js":"4","C:\\Users\\RED\\Documents\\GitHub\\red-todo-list\\client\\src\\components\\ModalDialogBox.js":"5","C:\\Users\\RED\\Documents\\GitHub\\red-todo-list\\client\\src\\components\\modals\\EditItem.js":"6","C:\\Users\\RED\\Documents\\GitHub\\red-todo-list\\client\\src\\components\\modals\\EditListSettings.js":"7","C:\\Users\\RED\\Documents\\GitHub\\red-todo-list\\client\\src\\components\\modals\\AddItem.js":"8","C:\\Users\\RED\\Documents\\GitHub\\red-todo-list\\client\\src\\services\\items.service.js":"9","C:\\Users\\RED\\Documents\\GitHub\\red-todo-list\\client\\src\\http-common.js":"10"},{"size":653,"mtime":1610899827923,"results":"11","hashOfConfig":"12"},{"size":5119,"mtime":1610963070712,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":3935,"mtime":1610961899680,"results":"15","hashOfConfig":"12"},{"size":2547,"mtime":1610958208050,"results":"16","hashOfConfig":"12"},{"size":2921,"mtime":1610962465379,"results":"17","hashOfConfig":"12"},{"size":2615,"mtime":1610888992999,"results":"18","hashOfConfig":"12"},{"size":1626,"mtime":1610889451416,"results":"19","hashOfConfig":"12"},{"size":448,"mtime":1610959798934,"results":"20","hashOfConfig":"12"},{"size":179,"mtime":1610922831534,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"14f0j7j",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\RED\\Documents\\GitHub\\red-todo-list\\client\\src\\index.js",[],["46","47"],"C:\\Users\\RED\\Documents\\GitHub\\red-todo-list\\client\\src\\App.js",["48"],"C:\\Users\\RED\\Documents\\GitHub\\red-todo-list\\client\\src\\reportWebVitals.js",[],"C:\\Users\\RED\\Documents\\GitHub\\red-todo-list\\client\\src\\components\\TodoItem.js",["49"],"import { faEdit, faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, {Component} from 'react';\r\n\r\n// Import React components\r\nimport EditItem from './modals/EditItem';\r\nimport './TodoItem.scss';\r\n\r\n// Import Axios services\r\n\r\nimport ItemDataService from '../services/items.service';\r\n\r\nexport default class TodoItem extends Component \r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            id: this.props.id || 0,\r\n            openEditModal: false,\r\n            itemTitle: this.props.itemTitle || '',\r\n            itemDescription: this.props.itemDescription || '',\r\n            checked: this.props.checked || false\r\n        };\r\n    }\r\n\r\n    // Event Handlers\r\n    handleEdit(itemTitle,itemDescription)\r\n    {\r\n        this.setState({openEditModal:true, modalName:''})\r\n    }\r\n\r\n    handleDelete()\r\n    {\r\n        //alert(\"Deleting an item\");\r\n    }\r\n\r\n    // Render Component\r\n    render()\r\n    {\r\n        return (\r\n            <>\r\n                <EditItem \r\n                    show={this.state.openEditModal}\r\n                    id={this.state.id}\r\n                    itemTitle={this.state.itemTitle}\r\n                    itemDescription={this.state.itemDescription}\r\n                    onHide={() => {\r\n                        this.setState({\r\n                            openEditModal:false,\r\n                            modalName:'edit-item'\r\n                        });\r\n                    }}\r\n                    onEdit={this.props.onEdit}\r\n                />\r\n                <div className=\"row todo-item\">\r\n                    <div className=\"col-2 d-flex justify-content-center item-status\">\r\n                        <div className=\"custom-control custom-checkbox\">\r\n                            <input \r\n                                className=\"item-status-checkbox custom-control-input\" \r\n                                type=\"checkbox\" \r\n                                defaultChecked={this.state.checked} \r\n                            />\r\n                            <label className=\"custom-control-label\">\r\n                                <span className=\"text-hide\"> Invisible </span>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-6 item-information\">\r\n                        <div className=\"row item-title\">\r\n                            {this.props.itemTitle || \"Test Title Here\"}\r\n                        </div>\r\n                        <div className=\"row item-details\">\r\n                            {this.props.itemDescription || \"Message here\"}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-4 item-operations d-flex justify-content-end\">\r\n                        <button \r\n                            type=\"button\" \r\n                            className=\"item-edit btn btn-outline-primary\"\r\n                            onClick={() => {\r\n                                this.setState({\r\n                                    openEditModal:true,\r\n                                    itemTitle: this.props.itemTitle,\r\n                                    itemDescription: this.props.itemDescription\r\n                                })\r\n                            }}\r\n                        >\r\n                            <FontAwesomeIcon icon={faEdit} />\r\n                        </button>\r\n                        <button \r\n                            type=\"button\" \r\n                            className=\"item-delete btn btn-outline-primary\"\r\n                            onClick={()=>this.props.onDelete(this.props.id)}\r\n                        >\r\n                            <FontAwesomeIcon icon={faTrash} />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}","C:\\Users\\RED\\Documents\\GitHub\\red-todo-list\\client\\src\\components\\ModalDialogBox.js",[],"C:\\Users\\RED\\Documents\\GitHub\\red-todo-list\\client\\src\\components\\modals\\EditItem.js",["50","51","52"],"C:\\Users\\RED\\Documents\\GitHub\\red-todo-list\\client\\src\\components\\modals\\EditListSettings.js",["53","54"],"\r\nimport { Modal, Button, Form } from \"react-bootstrap\";\r\nimport React, { Component } from \"react\";\r\nimport ModalDialogBox from '../ModalDialogBox';\r\n\r\nexport default class EditListSettings extends ModalDialogBox \r\n{\r\n    constructor(props)\r\n    {\r\n        super(props, \"edit-list-settings\");\r\n    }\r\n\r\n    countCharacters = (event) => {\r\n        const charCount = event.target.value.length;\r\n        this.setState({[event.target.id + '_length']: charCount})\r\n    }\r\n\r\n    renderHeader()\r\n    {\r\n        return (\r\n            <>\r\n                <Modal.Title>\r\n                    Edit List Settings\r\n                </Modal.Title>\r\n            </>\r\n        );\r\n    }\r\n\r\n    resetState()\r\n    {\r\n        super.resetState();\r\n        this.setState({\r\n            list_description_textarea_length: 0,\r\n            list_title_input_length: 0\r\n        });\r\n    }\r\n\r\n    renderBody()\r\n    {\r\n        let maxTitleLength = 50;\r\n        let maxDescriptionLength = 150;\r\n        return (\r\n            <Form>\r\n                <Form.Group>\r\n                    <Form.Label> \r\n                        List Title\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                        id=\"list_title_input\"\r\n                        as=\"input\" \r\n                        maxLength={maxTitleLength}\r\n                        onChange={this.countCharacters}\r\n                        defaultValue={this.props.listSettings.title}\r\n                        placeholder=\"Enter list title here.\"\r\n                    />\r\n                    <Form.Text>\r\n                        ({this.state.list_title_input_length || this.props.listSettings.title.length} / {maxTitleLength})\r\n                    </Form.Text>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label> \r\n                        List Description\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                        id=\"list_description_textarea\"\r\n                        as=\"textarea\"\r\n                        rows=\"3\"\r\n                        maxLength={maxDescriptionLength}\r\n                        defaultValue={this.props.listSettings.description}\r\n                        onChange={this.countCharacters}\r\n                        placeholder=\"Enter list description here.\"\r\n                    />\r\n                    <Form.Text>\r\n                        ({this.state.list_description_textarea_length || this.props.listSettings.description.length} / {maxDescriptionLength})\r\n                    </Form.Text>\r\n                </Form.Group>\r\n            </Form>\r\n        );\r\n    }\r\n}","C:\\Users\\RED\\Documents\\GitHub\\red-todo-list\\client\\src\\components\\modals\\AddItem.js",["55","56"],"import { Modal, Button, Form } from \"react-bootstrap\";\r\nimport React, { Component } from \"react\";\r\nimport ModalDialogBox from '../ModalDialogBox';\r\n\r\nexport default class AddItem extends ModalDialogBox\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props, \"add-item\");\r\n    }\r\n    \r\n    renderHeader()\r\n    {\r\n        return (\r\n            <>\r\n                <Modal.Title>\r\n                    Add List Item\r\n                </Modal.Title>\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderBody()\r\n    {\r\n        return (\r\n            <>\r\n                <Form id=\"add-item-form\">\r\n                    <Form.Group >\r\n                        <Form.Label>\r\n                            Item Title\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                            id=\"item-title\"\r\n                            as=\"input\"\r\n                            maxLength=\"50\"\r\n                            placeholder=\"Enter item title here.\"\r\n                        />\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group >\r\n                        <Form.Label>\r\n                            Item Description\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                            id=\"item-description\"\r\n                            as=\"textarea\"\r\n                            rows=\"3\"\r\n                            maxLength=\"150\"\r\n                            placeholder=\"Enter item description here.\"\r\n                        />\r\n                    </Form.Group>\r\n                </Form>\r\n            </>\r\n        );\r\n    }\r\n}","C:\\Users\\RED\\Documents\\GitHub\\red-todo-list\\client\\src\\services\\items.service.js",[],"C:\\Users\\RED\\Documents\\GitHub\\red-todo-list\\client\\src\\http-common.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":96,"column":9,"nodeType":"63","endLine":96,"endColumn":19},{"ruleId":"64","severity":1,"message":"65","line":11,"column":8,"nodeType":"66","messageId":"67","endLine":11,"endColumn":23},{"ruleId":"64","severity":1,"message":"68","line":1,"column":17,"nodeType":"66","messageId":"67","endLine":1,"endColumn":23},{"ruleId":"64","severity":1,"message":"69","line":2,"column":17,"nodeType":"66","messageId":"67","endLine":2,"endColumn":26},{"ruleId":"64","severity":1,"message":"70","line":8,"column":8,"nodeType":"66","messageId":"67","endLine":8,"endColumn":13},{"ruleId":"64","severity":1,"message":"68","line":2,"column":17,"nodeType":"66","messageId":"67","endLine":2,"endColumn":23},{"ruleId":"64","severity":1,"message":"69","line":3,"column":17,"nodeType":"66","messageId":"67","endLine":3,"endColumn":26},{"ruleId":"64","severity":1,"message":"68","line":1,"column":17,"nodeType":"66","messageId":"67","endLine":1,"endColumn":23},{"ruleId":"64","severity":1,"message":"69","line":2,"column":17,"nodeType":"66","messageId":"67","endLine":2,"endColumn":26},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-unused-vars","'ItemDataService' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Component' is defined but never used.","'axios' is defined but never used.","no-global-assign","no-unsafe-negation"]