[{"C:\\Users\\RED\\Documents\\GitHub\\red-todo-list\\client\\src\\index.js":"1","C:\\Users\\RED\\Documents\\GitHub\\red-todo-list\\client\\src\\App.js":"2","C:\\Users\\RED\\Documents\\GitHub\\red-todo-list\\client\\src\\reportWebVitals.js":"3","C:\\Users\\RED\\Documents\\GitHub\\red-todo-list\\client\\src\\components\\TodoItem.js":"4","C:\\Users\\RED\\Documents\\GitHub\\red-todo-list\\client\\src\\components\\ModalDialogBox.js":"5","C:\\Users\\RED\\Documents\\GitHub\\red-todo-list\\client\\src\\components\\modals\\EditItem.js":"6","C:\\Users\\RED\\Documents\\GitHub\\red-todo-list\\client\\src\\components\\modals\\EditListSettings.js":"7","C:\\Users\\RED\\Documents\\GitHub\\red-todo-list\\client\\src\\components\\modals\\AddItem.js":"8","C:\\Users\\RED\\Documents\\GitHub\\red-todo-list\\client\\src\\services\\items.service.js":"9","C:\\Users\\RED\\Documents\\GitHub\\red-todo-list\\client\\src\\http-common.js":"10"},{"size":653,"mtime":1610899827923,"results":"11","hashOfConfig":"12"},{"size":4474,"mtime":1610921564563,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":3349,"mtime":1610922224900,"results":"15","hashOfConfig":"12"},{"size":2370,"mtime":1610898517280,"results":"16","hashOfConfig":"12"},{"size":1807,"mtime":1610895160528,"results":"17","hashOfConfig":"12"},{"size":2615,"mtime":1610888992999,"results":"18","hashOfConfig":"12"},{"size":1626,"mtime":1610889451416,"results":"19","hashOfConfig":"12"},{"size":350,"mtime":1610921093262,"results":"20","hashOfConfig":"12"},{"size":179,"mtime":1610922831534,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"14f0j7j",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\RED\\Documents\\GitHub\\red-todo-list\\client\\src\\index.js",[],["47","48"],"C:\\Users\\RED\\Documents\\GitHub\\red-todo-list\\client\\src\\App.js",["49"],"// STYLES\nimport './App.scss';\n\n// LIBRARY IMPORTS\nimport {Button} from 'react-bootstrap';\nimport { Component } from 'react';\n\n// REGULAR COMPONENTS\nimport TodoItem from './components/TodoItem';\n\n//MODAL COMPONENTS\nimport EditListSettings from './components/modals/EditListSettings';\nimport AddItem from './components/modals/AddItem';\n\n// SERVICES\nimport ItemDataService from './services/items.service';\n\nexport default class App extends Component\n{\n  constructor(props)\n  {\n    super(props);\n    this.state = {\n      openModal: false, \n      modalName: \"\",\n      listItems: [],\n      listSettings: {\n        title: 'My List',\n        description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed sollicitudin eget tortor vel aliquam. Curabitur velit lectus, sodales in massa tempor, co'\n      }\n    };\n    this.handleCloseModal = this.handleCloseModal.bind(this);\n    this.handleOpenModal = this.handleOpenModal.bind(this);\n  }\n\n  listItemsContent = [\n    {\n      itemTitle: \"This is a Title\",\n      itemDescription: \"Hello!\",\n      checked: false\n    },\n    {\n      itemTitle: \"This is also a Title\",\n      itemDescription: \"How Are You?\",\n      checked: false\n    },\n    {\n      itemTitle: \"This is not a Title\",\n      itemDescription: \"How Well Are You?\",\n      checked: true\n    }\n  ];\n\n  //TEST FUNCTION\n  populateList()\n  {\n    this.listItemsContent.forEach(\n      (item) =>\n      {\n        var data = {\n          itemTitle: item.itemTitle,\n          itemDescription: item.itemDescription,\n          checked: item.checked\n        };\n        ItemDataService.create(data)\n          .then (response=>{\n            console.log(response.data);\n          })\n          .catch (e=>{\n            console.log(e);\n          });\n      });\n  }\n\n  componentDidMount()\n  {\n    // TEST CODE\n    //this.populateList();\n\n    // Get all items in list from database through backend REST api\n    ItemDataService.getAll()\n      .then(response=>{\n        this.setState({\n          listItems: response.data\n        });\n        this.state.listItems = response.data;\n        console.log(response.data);\n        console.log(this.state.listItems);\n      })\n      .catch(e=>{\n        console.log(e);\n      })\n  }\n\n  //HANDLE MODAL EVENTS\n  \n  handleCloseModal()\n  {\n    this.setState(state => ({\n      openModal:false,\n      modalName:''\n    }));\n  }\n\n  handleOpenModal (openModalName)\n  {\n    this.setState(state => ({\n      openModal:true,\n      modalName: openModalName\n    }));\n  }\n\n  handleShowModal(modalName)\n  {\n    return (this.state.modalName===modalName ? this.state.openModal : 0);\n  }\n\n  // RENDER LIST ITEMS\n\n  renderListItems()\n  {\n    const item = (\n      <>\n        {this.state.listItems.map(\n            listItem => (\n              <TodoItem \n                key={listItem.id}\n                title={listItem.itemTitle}\n                description={listItem.itemDescription}\n                checked={listItem.checked}\n              />\n        ))}\n      </>\n    );\n    return item;\n  }\n\n  render()\n  {\n    return (\n      <div className=\"container-fluid d-flex flex-column justify-content-center h-100 overflow-auto App\">\n        <EditListSettings \n          listSettings={this.state.listSettings}\n          show={this.handleShowModal(\"edit-list-settings\")} \n          onHide={this.handleCloseModal}\n        />\n        <AddItem\n          show={this.handleShowModal(\"add-item\")}\n          onHide={this.handleCloseModal}\n        />\n        <div className=\"row d-flex flex-column align-items-center justify-content-center list-title\">\n          <div className=\"container-fluid\" style={{maxWidth:750}}>\n            <h1> {this.state.listSettings.title} </h1>\n            <p> {this.state.listSettings.description} </p>\n          </div>\n        </div>\n        <div className=\"row list-contents h-50\">\n          <div className=\"container-fluid justify-content-center h-100 overflow-auto\" style={{maxWidth:750}}>\n            { this.renderListItems() }\n          </div>\n        </div>\n        <div className=\"row justify-content-center list-operations\">\n            <Button \n              variant=\"outline-primary\"\n              onClick={()=>this.handleOpenModal(\"add-item\")}\n            >\n              Add New Item\n            </Button>\n            <Button \n              variant=\"outline-primary\"\n              onClick={() => this.handleOpenModal(\"edit-list-settings\")}\n            >\n              List Settings\n            </Button>\n        </div>\n      </div>\n    );\n  }\n}","C:\\Users\\RED\\Documents\\GitHub\\red-todo-list\\client\\src\\reportWebVitals.js",[],"C:\\Users\\RED\\Documents\\GitHub\\red-todo-list\\client\\src\\components\\TodoItem.js",[],"C:\\Users\\RED\\Documents\\GitHub\\red-todo-list\\client\\src\\components\\ModalDialogBox.js",[],"C:\\Users\\RED\\Documents\\GitHub\\red-todo-list\\client\\src\\components\\modals\\EditItem.js",["50","51"],"import { Modal, Button, Form } from \"react-bootstrap\";\r\nimport React, { Component } from \"react\";\r\nimport ModalDialogBox from '../ModalDialogBox';\r\n\r\nexport default class EditItem extends ModalDialogBox\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props,\"edit-item\");\r\n    }\r\n    \r\n    renderHeader()\r\n    {\r\n        return (\r\n            <>\r\n                <Modal.Title>\r\n                    Edit Item\r\n                </Modal.Title>\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderBody()\r\n    {\r\n        return (\r\n            <>\r\n                <Form>\r\n                    <Form.Group id=\"listTitle\">\r\n                        <Form.Label>\r\n                            Item Title\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                            id=\"item-title\"\r\n                            as=\"input\"\r\n                            maxLength=\"50\"\r\n                            defaultValue={this.props.itemTitle || ''}\r\n                            placeholder=\"Enter item title here.\"\r\n                        />\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group id=\"listDescription\">\r\n                        <Form.Label>\r\n                            Item Description\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                            id=\"item-description\"\r\n                            as=\"textarea\"\r\n                            rows=\"3\"\r\n                            maxLength=\"150\"\r\n                            defaultValue={this.props.itemDescription || ''}\r\n                            placeholder=\"Enter item description here.\"\r\n                        />\r\n                    </Form.Group>\r\n                    \r\n                </Form>\r\n            </>\r\n        )\r\n    }\r\n}","C:\\Users\\RED\\Documents\\GitHub\\red-todo-list\\client\\src\\components\\modals\\EditListSettings.js",["52","53"],"\r\nimport { Modal, Button, Form } from \"react-bootstrap\";\r\nimport React, { Component } from \"react\";\r\nimport ModalDialogBox from '../ModalDialogBox';\r\n\r\nexport default class EditListSettings extends ModalDialogBox \r\n{\r\n    constructor(props)\r\n    {\r\n        super(props, \"edit-list-settings\");\r\n    }\r\n\r\n    countCharacters = (event) => {\r\n        const charCount = event.target.value.length;\r\n        this.setState({[event.target.id + '_length']: charCount})\r\n    }\r\n\r\n    renderHeader()\r\n    {\r\n        return (\r\n            <>\r\n                <Modal.Title>\r\n                    Edit List Settings\r\n                </Modal.Title>\r\n            </>\r\n        );\r\n    }\r\n\r\n    resetState()\r\n    {\r\n        super.resetState();\r\n        this.setState({\r\n            list_description_textarea_length: 0,\r\n            list_title_input_length: 0\r\n        });\r\n    }\r\n\r\n    renderBody()\r\n    {\r\n        let maxTitleLength = 50;\r\n        let maxDescriptionLength = 150;\r\n        return (\r\n            <Form>\r\n                <Form.Group>\r\n                    <Form.Label> \r\n                        List Title\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                        id=\"list_title_input\"\r\n                        as=\"input\" \r\n                        maxLength={maxTitleLength}\r\n                        onChange={this.countCharacters}\r\n                        defaultValue={this.props.listSettings.title}\r\n                        placeholder=\"Enter list title here.\"\r\n                    />\r\n                    <Form.Text>\r\n                        ({this.state.list_title_input_length || this.props.listSettings.title.length} / {maxTitleLength})\r\n                    </Form.Text>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label> \r\n                        List Description\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                        id=\"list_description_textarea\"\r\n                        as=\"textarea\"\r\n                        rows=\"3\"\r\n                        maxLength={maxDescriptionLength}\r\n                        defaultValue={this.props.listSettings.description}\r\n                        onChange={this.countCharacters}\r\n                        placeholder=\"Enter list description here.\"\r\n                    />\r\n                    <Form.Text>\r\n                        ({this.state.list_description_textarea_length || this.props.listSettings.description.length} / {maxDescriptionLength})\r\n                    </Form.Text>\r\n                </Form.Group>\r\n            </Form>\r\n        );\r\n    }\r\n}","C:\\Users\\RED\\Documents\\GitHub\\red-todo-list\\client\\src\\components\\modals\\AddItem.js",["54","55"],"import { Modal, Button, Form } from \"react-bootstrap\";\r\nimport React, { Component } from \"react\";\r\nimport ModalDialogBox from '../ModalDialogBox';\r\n\r\nexport default class AddItem extends ModalDialogBox\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props, \"add-item\");\r\n    }\r\n    \r\n    renderHeader()\r\n    {\r\n        return (\r\n            <>\r\n                <Modal.Title>\r\n                    Add List Item\r\n                </Modal.Title>\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderBody()\r\n    {\r\n        return (\r\n            <>\r\n                <Form id=\"add-item-form\">\r\n                    <Form.Group >\r\n                        <Form.Label>\r\n                            Item Title\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                            id=\"item-title\"\r\n                            as=\"input\"\r\n                            maxLength=\"50\"\r\n                            placeholder=\"Enter item title here.\"\r\n                        />\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group >\r\n                        <Form.Label>\r\n                            Item Description\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                            id=\"item-description\"\r\n                            as=\"textarea\"\r\n                            rows=\"3\"\r\n                            maxLength=\"150\"\r\n                            placeholder=\"Enter item description here.\"\r\n                        />\r\n                    </Form.Group>\r\n                </Form>\r\n            </>\r\n        );\r\n    }\r\n}","C:\\Users\\RED\\Documents\\GitHub\\red-todo-list\\client\\src\\services\\items.service.js",[],"C:\\Users\\RED\\Documents\\GitHub\\red-todo-list\\client\\src\\http-common.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":86,"column":9,"nodeType":"62","endLine":86,"endColumn":19},{"ruleId":"63","severity":1,"message":"64","line":1,"column":17,"nodeType":"65","messageId":"66","endLine":1,"endColumn":23},{"ruleId":"63","severity":1,"message":"67","line":2,"column":17,"nodeType":"65","messageId":"66","endLine":2,"endColumn":26},{"ruleId":"63","severity":1,"message":"64","line":2,"column":17,"nodeType":"65","messageId":"66","endLine":2,"endColumn":23},{"ruleId":"63","severity":1,"message":"67","line":3,"column":17,"nodeType":"65","messageId":"66","endLine":3,"endColumn":26},{"ruleId":"63","severity":1,"message":"64","line":1,"column":17,"nodeType":"65","messageId":"66","endLine":1,"endColumn":23},{"ruleId":"63","severity":1,"message":"67","line":2,"column":17,"nodeType":"65","messageId":"66","endLine":2,"endColumn":26},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","no-global-assign","no-unsafe-negation"]